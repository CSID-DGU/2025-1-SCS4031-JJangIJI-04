#1. 워크플로 이름
name: CD

#2. 워크플로 시작 조건
on:
  pull_request:
    branches: [ "dev" , "main", "feat/#6-CICD"]
    types: [closed]

jobs:
  build:
    if: github.event.pull_request.merged == true
    #3. 실행 환경 지정
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend/hankkimoa  # 실제 Gradle 빌드가 실행되는 경로로 통일
    permissions:
      contents: read

    #4. 실행 스텝 지정
    steps:
      - uses: actions/checkout@v4

      ## JDK Setting
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
        java-version: '17'
        distribution: 'temurin'

      ## Gradle setting
      # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Gradle Wrapper 실행 권한 추가
        run: chmod +x gradlew

      - name: Write application.yml
        env:
          APPLICATION_YML: ${{ secrets.APPLICATION_YML }}

        run: |
          echo "${APPLICATION_YML}" > backend/hankkimoa/src/main/resources/application.yml

      ## gradle build
      - name: Build with Gradle
        run: ./gradlew build

      ## docker build & push to production
      - name: Docker build & push to prod
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_REPO }}/hankkimoa_back .
          docker push ${{ secrets.DOCKER_REPO }}/hankkimoa_back

      ## Deployment to AWS EC2
      - name: EC2 Docker Run
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_IP }}
          username: ubuntu
          key: ${{ secrets.AWS_KEY }}
          script: |
            docker logout
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

            # mews_dev 이미지 기반 컨테이너만 종료 및 삭제
            docker ps -a --filter "ancestor=${{ secrets.DOCKER_USERNAME }}/hankkimoa_back" -q | xargs -r docker rm -f

            # mews_dev 이미지 삭제 (실패해도 무시)
            docker rmi ${{ secrets.DOCKER_USERNAME }}/hankkimoa_back || true

            # 최신 이미지 pull
            docker pull ${{ secrets.DOCKER_USERNAME }}/hankkimoa_back

            # 새로운 컨테이너 실행 (포트나 볼륨 등은 상황에 맞게 수정)
            docker run -d --name hankkimoa_back -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/hankkimoa_back
